# build.yml
on:
  push:
  pull_request:

name: Build, Test and Push to ECR

env:
  ECR_REPO_NAME: icn-mockr/app
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build-and-push:
    name: Build and push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3
      - name: Get branch on commit
        id: get_branch
        run:
          echo branch_name=$(if [[ "ref-${{ github.base_ref }}" == *"deploy"* ]]; then echo ${{ github.head_ref }} | awk -F '/' '{print $1 $2}' ; else echo ${{ github.ref }} | awk -F '/' '{print $3 $4}'; fi) >> $GITHUB_OUTPUT
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ECR_REGISTRY }}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and tag
        uses: docker/build-push-action@v4
        env:
          BRANCH_NAME: ${{ steps.get_branch.outputs.branch_name }}
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: false
          load: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_NAME }}:${{ env.BRANCH_NAME }}-${{ github.sha }},${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_NAME }}:${{ env.BRANCH_NAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build test image
        if: contains(github.base_ref, 'deploy')
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: false
          load: true
          tags: icn-mockr_app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Run Tests
        if: contains(github.base_ref, 'deploy')
        run: |
          docker-compose -f docker-compose.test.yml run app sh -c 'bundle exec rspec'
      - name: Scan image
        if: contains(github.base_ref, 'deploy')
        id: scan_image
        uses: anchore/scan-action@v3
        env:
          BRANCH_NAME: ${{ steps.get_branch.outputs.branch_name  }}
        with:
          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_NAME }}:${{ env.BRANCH_NAME }}-${{ github.sha }}
          fail-build: false
          output-format: json
      - name: Save full vulnerability report
        if: contains(github.base_ref, 'deploy')
        uses: actions/upload-artifact@v3
        with:
          name: anchore-reports
          path: ${{ steps.scan_image.outputs.json }}
      - name: Parse Vulns
        if: contains(github.base_ref, 'deploy')
        id: parse_vuls
        run: |
          total_layers=$(cat ${{ steps.scan_image.outputs.json }} | jq '.image.layers | length')
          cat ${{ steps.scan_image.outputs.json }} |
            jq -c --arg total_layers "$total_layers" '[.matches
              | .[]
              | {package: .artifact.name, type: .artifact.type, severity: .vulnerability.severity, description: .vulnerability.description, url: .vulnerability.links, fixedInVersion: .vulnerability.fixedInVersion, locations: .artifact.locations}
              | select( .severity | contains("Negligible")  | not)
              | select( .severity | contains("Unknown") | not)
              | select( .locations | .[] | .layerIndex == "$total_layers")
              | select( .fixedInVersion != null)]' >> vulnerabilities_to_be_fixed.json
          echo "vulnerabilities_to_be_fixed=$(cat vulnerabilities_to_be_fixed.json) >> $GITHUB_OUTPUT"
      - name: comment PR if scan finds vuls
        if: contains(github.base_ref, 'deploy') && steps.parse_vuls.outputs.vulnerabilities_to_be_fixed != '[]'
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            Container security scan has found vulnerabilities.
            Please check the actions associated with this PR.
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            ```json
            ${{ steps.parse_vuls.outputs.vulnerabilities_to_be_fixed }}
            ```
      - name: Save vulnerabilities to be fixed report
        if: contains(github.base_ref, 'deploy') && steps.parse_vuls.outputs.vulnerabilities_to_be_fixed != '[]'
        uses: actions/upload-artifact@v3
        with:
          name: vulnerability-report-to-be-fixed
          path: ./vulnerabilities_to_be_fixed.json
      - name: Push
        if: contains(github.event_name, 'push')
        env:
          BRANCH_NAME: ${{ steps.get_branch.outputs.branch_name }}
        run: |
          docker push ${{ env.ECR_REGISTRY }}/$ECR_REPO_NAME:"$BRANCH_NAME"-"$GITHUB_SHA"
          docker push ${{ env.ECR_REGISTRY }}/$ECR_REPO_NAME:"$BRANCH_NAME"